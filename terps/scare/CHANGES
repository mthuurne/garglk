
1.1	First public release

1.1a,b	Additional verbs to complete major functional areas.

1.1c	Fixed decompression problem exposed by the post-comp02 release of
		Robert Goodwin's 'The PK Girl'.
	Added undo functionality:
		- "Undo" verb
		- sc_undo_game_turn() function
		- sc_is_undo_available() query function
	Fixed minor memory leak with status line and current room name in
		gs_copy().

1.1d	Fixed an endian problem that prevented correct builds on big endian
		systems.  Thanks to Jan-Erik Karlsson for isolating and
		reporting this problem, along with its fix.
	Redesigned TAF file decompression to place far less stress on malloc
		and free functions.  The old TAF file decompression module
		caused significant performance problems with AmigaOS malloc.
		Again, thanks to Jan-Erik Karlsson for this problem report.
	Fixed omission in sc_free_game(), which used to fail to free memory
		allocated to holding raw TAF data.
	Fixed omission in prop_destroy_node() which used to fail to free
		memory allocated to the child list.
	Added preallocation of properties nodes, in pools, to scprops.c,
		further greatly reducing stress on malloc.  With this change
		and the redesigned TAF compression, 'The PK Girl' becomes
		fully playable with SCARE through IFP; IFP's garbage collec-
		tion now adds only around 6% to game load time.
	Added handling for stateful objects and alternate room descriptions,
		combined with a few small tweaks to accommodate them.

1.1e	Fixed miniscule memory leak in gs_destroy().
	Fixed incorrect condition ordering in taf_append().
	Added tag stripping for game author and title, to neaten the title
		line first displayed for 'To Hell in a Hamper'.
	Fixed bug in pf_strip_tags() that caused it to miss consecutive tags.
	Added sc_get_game_max_score() interface query function.
	Changed return type of os_read_line() from void to sc_bool; return of
		TRUE indicates data buffered, FALSE ignore and re-call.
	Fixed a bug in run_player_input() that caused it to try to use old
		input or stack junk when an input line ended with a comma.
	Substantial rewrite of os_glk.c to handle Microsoft Codepage 1252
		characters, and provide transcripts, reading input from a
		file, and player input logs.
	Improved alignment with newer jAsea code (objects worn by player/NPC
		on startup, turn based unmoved flag updates, game won text).
	Fixed bug in uip_parse_list() that caused input pattern matches to
		fail against task commands where patterns had consecutive
		'[...]' or '{...}' elements without intervening spaces; shows
		up with 'To Hell in a Hamper'.
	Relaxed running requirements for sc_undo_game_turn(), sc_load_game(),
		sc_save_game(), and sc_restart_game().
	Adding RUNNING text file, with notes on running SCARE.

1.3.1	Added the ability to run Adrift 3.9 games as well as 4.0 ones.
	Added code and interface functions to provide the interface with a
		game's use of sound and/or graphics resources.  See PORTING
		for sc_does_game_use_sound(), sc_does_game_use_graphics(),
		and for the os_play_sound(), os_stop_sound(), and
		os_show_graphic() functions.
	Many and drastic output message changes in an attempt to align with
		the Adrift runner for ALR matching (damn you, ALRs).
	Implemented player size and weight checks, and container size and
		contained object count checks.
	Added standard responses to game actions such as "jump", "dance",
		and profanity, giving ALRs something to chew on.
	Created "score" and "turn" verbs, "kiss", "smell", "push", "pull",
		and assorted others.
	Added automatic listing of objects in a container when opened.
	Implemented listing of NPC objects worn and held on "examine <npc>".
	Added first person responses for games that request this mode.
	Updated to Zlib 1.2.1, which offers somewhat faster operation.  It's
		distributed in .zip format, so the SCARE Makefile no longer
		needs to maintain extracted Zlib sources, as it did with the
		gzipped tar distribution of Zlib 1.1.4.
	Fixed a bug in run_player_input() that left unused input line data
		buffered across game end undo.
	Corrected game tidy up after calls to sc_quit_game().
	Corrected checks on object get to reject "get <object>" where the
		object is either held or worn by a NPC.
	Removed TAF line pushback functionality from the TAF file module,
		and implemented it locally inside the TAF file parser.
	Mapped 'font face="courier"' in os_glk.c, os_print_tag(), to Glk
		preformatted text style.
	Improved os_glk.c so that it copes with "buggy" games that do not
		correctly nest markup tags (for example "<i><font ...>
		mumble</i></font").
	Refactored os_glk.c slightly to facilitate non-UNIX Glk builds.
	End of game delay os_glk.c now happens only on 'restart' selection.
	Fixed a bug in run_main_loop() that caused waits to consume one
		turn too many.
	Included a required second variable interpolation pass to pf_filter(),
		which needs to replace %...% both before and after ALRs, and
		a second ALR pass after the second variable interpolation,
		with flags to let each ALR fire only once.
	Added printfilter function to indicate a new sentence, provoking
		uppercasing of the next buffered character.
	Modified object name printing in lib_print_object_np() to include
		any significant parts of the object prefix, and to switch
		"a" or "an" for "the" when (apparently) appropriate.
	Added interface functions to obtain a game's hints.  See PORTING for
		sc_game_hint_iterate(), sc_get_game_hint_question(),
		sc_get_game_subtle_hint(), sc_get_game_unsubtle_hint(), and
		os_display_hints().  Added SC_CONF_VIEW_HINTS.
	Added a %version% variable.
	Substantial improvements to expression handling; SCARE now fully
		handles all 4.0.42 expression formulae correctly, including
		the freedom to mix string and integer expression elements.
		All expression handling is now in scexpr.c, and scstrexp.c
		is dead and buried.
	Fixed a minor bug in conversation topic matching; the older code would
		match substrings (for example "hat" before "hatchet").
	Improved "it", "him" and "her" handling so that they now work with
		game commands that use %object% and %character% references.
	Fixed a program crash seen when trying to wear a static object.
	Added a reasonably useful game (and SCARE) debugger, accessible, when
		enabled, using the "debug" command.
	Fixed the NPC listing loop for the "look" command, which was printing
		NPCs in an odd fashion.
	Altered the ordering of output for "examine", to print object state
		before, rather than after, container and surface content.
	Fixed an ugly bug in game saving, present since the dawn of time but
		substantially worsened with a change made in 1.1e.
	Aligned the %theobject%, %on_, %in_, and %onin_ variables with the
		formats printed by the library.
	Added getdynfromroom() handling for so-called task command functions.
	Moved trace output produced by SC_TRACE_FLAGS from stdout to stderr.
	Fixed an NPC bug that prevented NPCs from moving about if they don't
		wait for a start task; this one should have been fixed long,
		long ago, as Thomas Payerle had the right extra code in
		SCARE 1.2.1 (thanks, Thomas).
	Changed version naming convention, by popular request.

1.3.2	Fixed a reverse engineering bug that prevented 'Doomed Xycanthus' from
		running in SCARE.
	Added the ability to run Adrift 3.8 games.
	Integrated David Kinder's Windows Glk code into the main Glk interface.
	Updated game title and author query functions to avoid ALR clashes.
	Minor updates to library output to avoid clashes with game ALRs.
	Fixed an object and NPC referencing problem that caused SCARE to fail
		to distinguish between things such as "table leg" and "table".
	Updated the way room lists are stored in properties to reduce heap
		memory requirement and improve game load performance, a 25%
		to 35% improvement on average games, and 50% on some.
	Fixed a bug that caused SCARE to crash when trying to lock a container
		that has no key (not lockable).
	Fixed an omission that caused object alternate descriptions requested
		where a task is not completed to show the wrong description.
	Added score change notifications, and commands and interface functions
		to control notification messages.
	Corrected an omission where SCARE failed to use changed descriptions
		for NPCs on character walks, and a bug that noted meetings
		between NPCs on walks and objects or other NPCs too often.
	Fixed a bug in task handling, one that shows up with the rubber ball
		in 'The Woods are Dark'; thanks to Emily Short for finding
		and reporting this.
	Corrected a bug that prevented the version 3.9 game 'The Caves of
		Morpheus' from loading, and another that caused 'The Test' to
		virtually hang (caused by its use of repeated wildcards).
	Fixed a bug with version 3.9 openable objects; those initially open
		were being reported by SCARE as instead being locked.
	Added a function to retrieve any preferred default font from the game.

1.3.3	Fixed a game crash with version 3.8 games when trying to lock an
		openable object with "lock <object>".
	Avoided a possible (theoretical) crash where large negative numbers
		are used in Adrift expressions.
	Now silently ignores empty HTML-like tags, "<>"; prior versions
		would issue a warning.
	Use monospaced output in Glk when the game uses either 'courier' or
		'terminal' fonts; originally only 'courier' was recognized.
		This improves performance with 'Humbug'.
	Set %text% to the player input line before printing game command
		error ("dontunderstand") messages, again for 'Humbug'.
	Fixed a hang on loading 'The Cat in the Tree' and 'Ice Cream';
		thanks to David Kinder for the error report.
	Minor fix to kiss NPC message, and corrected "north_west" to be
		"north-west" in movement command.
	Fixed an abort when an NPC with a walk is initialized to "hidden";
		thanks to Richard Otter for uncovering the error.
	Minor cleanup of input parser error handling, and change in
		debugger to stop debug refusal from consuming a game turn.
	Changed function sc_game_hint_iterate() to sc_iterate_game_hints()
		for better naming symmetry with other interface functions.
	Performance optimizations to scprops.c, giving a 20-30% improvement.
	Added error trap for pathological games that define no rooms.
	Added %room% variable, accidentally omitted from earlier releases.
	Implemented raise-to-power (^) operator in expressions, and fixed a
		pair of subtle bugs with unary minus and plus operators
		(incorrect associations, and missing comparisons in unary
		minus and plus determinations).
	Added "lay" as a synonym for "lie", and fixed NPC entry/exit
		message where NPC enters or exits from above or below.
	Fixed %version% to contain values that correctly indicate the level
		of Adrift runner emulation.
	Corrected NPC walk tasks for meeting player, object, and other NPCS;
		thanks to Robert Goodwin for the error report.
	Documented battle system TAF file fields in sctafpar.c, in case the
		occasion ever arises to implement the battle system.
	Minor structure tweaks to save memory via better field alignments.
	Fixed a silly bug that failed to enable trace/debugger for Windows.
	Fixed a bug that prevented player positions from being set up
		correctly on game loads; thanks to Eric Mayer for the report.
	Added "ex" and "exam" as additional synonyms for "examine".
	Corrected handling of argumentless <wait> tags, and made a few small
		performance improvements (strlen elimination).
	Upgraded handling of "get", "drop", "get all" and "drop all" command
		handlers to check for game overrides for each object.
	Added a couple of casts to correct gcc 3.3.4 compilation warnings.
	Minor tidy up of Glk style resetting in os_glk.c.
	Fixed a failure to load Unfortunately.taf; thanks to David Kinder for
		the report.
	Added Glk interface functions to print a status line even if the Glk
		library in use lacks windowing capabilities (cheapglk).
	Added a workround for Xglk resizing problems.  It should have no
		effect on Glk libraries that don't have Xglk's deficiencies.

